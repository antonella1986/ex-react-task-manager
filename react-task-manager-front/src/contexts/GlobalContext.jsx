import { createContext } from "react";
import { useTasks } from "../hooks/useTasks";

const GlobalContext = createContext();

const GlobalProvider = ({ children }) => {
    //contenitore per tutto quello che useTasks() restituisce
    const tasksData = useTasks();

    return (
        <GlobalContext.Provider value={ tasksData }>
            {children}
        </GlobalContext.Provider>
    );
};

export { GlobalContext, GlobalProvider };

/*

useTasks()         â†’ ritorna logiche e dati (tasks, addTask, filteredTask, ecc.)
    â†“
GlobalProvider     â†’ prende questi dati e li passa nel contesto
    â†“
useContext(GlobalContext)
    â†’ recupera i dati giÃ  pronti (senza rieseguire lâ€™hook)

ðŸ”„ useTasks() = la "centrale operativa"
Contiene:
- tutti gli stati (tasks, query, ecc.)
- tutta la logica (aggiunta, rimozione, ricerca, debounce, ecc.)

ðŸ§  GlobalContext = la "scatola condivisa"
Serve a non dover chiamare useTasks() in ogni componente, perchÃ© cosÃ¬ avresti tanti stati scollegati.

ðŸ“£ GlobalProvider = il "megafono"
Prende tutto da useTasks() e lo distribuisce a tutti i componenti figli con value={tasksData}.
*/